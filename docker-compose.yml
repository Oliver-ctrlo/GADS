#
# Setup
#
#   Copy config.yml-example to config.yml and configure:
#     engines:
#       session:
#         YAML:
#           is_secure: 0
#     plugins:
#       DBIC:
#         default:
#           dsn: dbi:Pg:database=postgres;host=db
#       Auth::Extensible:
#         realms:
#           dbic:
#             password_expiry_days: 9999
#
#   Install npm modules
#     $ docker run -v `pwd`:/home/node/app -it node:10-alpine sh
#     $ cd /home/node/app
#     $ yarn install
#     $ exit
#
#
#   Run: `docker-compose up`
#
#   This will start the following services:
#   - http://localhost:3000 (The app itself, login with user gads@ctrlo.local)
#   - http://localhost:8080 (pgAdmin, login with gads@ctrlo.local / gads)
#   - http://localhost:8025 (MailHog, all sent out mails will be captured over here)
#
#   To login:
#   - Request a password reset for gads@ctrlo.local
#   - In the terminal, you should see an sql query similar to:
#       UPDATE "user" SET "resetpw" = ? WHERE ( "id" = ? ): '[TOKEN]', '2'
#     where TOKEN is a string made of numbers and lettres
#   - visit: http://localhost:3000/resetpw/[TOKEN]
#   - Follow explanation shown and you should be able to login
#
# Add additional npm packages
#
#   $ docker run -u node -w /home/node/app -v `pwd`:/home/node/app -it node:10-alpine sh
#   $ yarn install --add <package>
#   $ exit
#
# Rebuild the app image (ie when an additional perl package is added)
#   $ docker-compose build --no-cache app
#
# Debugging
#
#   Enter a running container:
#   $ docker-compose exec app bash
#
#   If a container failed to start, run it manually:
#   $ docker run -u 1000:1000 -v `pwd`:/gads -it gads_app /bin/bash
#

version: '3'

services:
  app:
    build: .
    volumes:
      - .:/gads
    ports:
      - 3000:3000
    environment:
      - DBIC_MIGRATION_USERNAME=postgres
      - DBIC_MIGRATION_PASSWORD=postgres
    user: root
    depends_on:
      - db
  db:
    image: postgres:13.1
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./share/seed/PostgreSQL:/docker-entrypoint-initdb.d
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=gads@ctrlo.local
      - PGADMIN_DEFAULT_PASSWORD=gads
    ports:
      - 8080:80
  mailhog:
    image: mailhog/mailhog:v1.0.0
    ports:
      - 1025:1025
      - 8025:8025
  frontend:
    image: node:14-alpine
    volumes:
      - .:/home/node/app
    working_dir: /home/node/app
    user: node
    environment:
      NODE_ENV: production
    command: ["npm", "run", "roger"]

volumes:
  db-data:
