[%
  tmplColumnConfig = '{_NAME_ORDERABLE_TYPE_DATA_CLASSNAME_WIDTH},';
  tmplColumnButtonConfig = '{"name":"","orderable":false,"className":"min-tablet-l data-table__header--invisible"},';

  reorderConfig    = '';
  pageLengthConfig = '';
  lengthMenuConfig = '';
  columnConfig     = '';
  buttonConfig     = '';
  
  header_row = {
    fields = []
  };

  IF table_reorder_rows;
    reorderConfig = "\n" _ '    "rowReorder":{"snapX":true},';
    columnConfig  = '{"name":"Position","orderable":true,"width":"30px","className":"reorder data-table__header--invisible"},';
    
    header_row.fields.push({
      type   = "header"
      label  = "Position"
      filter = ""
    });
  END;

  IF table_page_length;
    pageLengthConfig = '"pageLength":' _  page_length _ ',';
  END;

  IF table_length_menu == 'basic';
    pageLengthConfig = '"lengthMenu":[10,25,50,100,200],';
  ELSIF table_length_menu == 'detail';
    pageLengthConfig = '"lengthMenu":[[5,10,25,50,-1],[5,10,25,50,"All"]],';
  END;

  # create table columns and column config for each requested column.
  FOREACH column in table_columns;
    rowField = tmplColumnConfig
      .replace('_NAME', column.name ? '"name":"' _ column.name _ '"' : '"name":""')
      .replace('_ORDERABLE', column.orderable ? ',"orderable":true' : ',"orderable":false')
      .replace('_TYPE', column.type ? ',"type": "' _ column.type _ '"' : '')
      .replace('_DATA', column.data ? ',"data": "' _ column.data _ '"' : '')
      .replace('_CLASSNAME', column.class ? ',"className":"' _ column.class _ '"' : '')
      .replace('_WIDTH', column.width ? ', "width":"' _ column.width _ '"' : '');

    columnConfig = columnConfig _ rowField;

    header_row.fields.push({
      type   = "header"
      label  = column.label || column.name || ''
      filter = column.filter || ''
    });
  END;

  IF table_buttons;
    # create table columns and column config for each button
    FOREACH button in table_buttons;
      buttonConfig = buttonConfig _ tmplColumnButtonConfig;
      header_row.fields.push({
        type  = "header"
        label = button.label
      });
    END;
    
    # add buttons to each row
    FOREACH row in rows;
      FOREACH button in table_buttons;
        row.fields.push({
          type             = button.type || "button"
          button_type      = button.button_type || "link"
          class            = button.class || ''
          button_class     = button.button_class || ''
          label            = button.label
          link             = button.link || ''
          filter           = button.filter || ''
          modalId          = button.modalId || ''
          sub_field        = button.sub_field || ''
          sub_params       = button.sub_params || row.button.sub_params || ''
          dataCurrentId    = row.modal.dataCurrentId || ''
          dataLayoutId     = row.modal.dataLayoutId || ''
          dataInstanceName = row.modal.dataInstanceName || ''
          dataTitle        = row.modal.dataTitle || ''
          dataID           = row.modal.dataID || ''
        });
      END;
    END;
  END;
  
  # add column for screen overflow expand/collapse column
  header_row.fields.push({
    type = "header"
    label = "Toggle child row"
  });

  rowCounter = 1;

  FOREACH row in rows;
    fieldCounter = 1;

    FOREACH field in row.fields;
      # add hidden fields for row reordering
      IF table_reorder_rows AND fieldCounter == 1;
        row.fields.unshift({
          type = "text",
          label = "<span>" _ rowCounter _ "</span>"
        });

        IF field.sub_field;
          tmpFields = ["fields/hidden.tt"];
          tmpParams = [{name = "position", value = row.sort_id || rowCounter}];

          tmpFields.push(field.sub_field);
          tmpParams.push(field.sub_params);

          field.sub_field_type = "array";
          field.sub_field      = tmpFields;
          field.sub_params     = tmpParams;
        ELSE;
          field.sub_field  = "fields/hidden.tt";
          field.sub_params = {
            name  = "position",
            value = row.sort_id || rowCounter
          };
        END;
      END;
      
      fieldCounter = fieldCounter + 1;
    END;
    
    # replace link placeholders
    FOREACH field IN row.fields;
      IF field.link AND row.link_placeholders AND !row.link_placeholders.empty;
        FOREACH key in row.link_placeholders.keys;
          field.link = field.link.replace('{' _ key _ '}', row.link_placeholders.$key);
        END;
      END;
    END;
    
    # add empty field for screen overflow expand/collapse column
    row.fields.push({type = "text"});
    rowCounter   = rowCounter + 1;
  END;
  
  table_config = '{
    "dom": "' _ ( table_dom || '' ) _ '",_AJAX_STATE_SAVE
    "order":[' _ ( table_order || '[0,"asc"]' ) _ '],
    "language": ' _ ( table_language || '{"emptyTable": "There is no data available in this table"}' ) _ ',
    "responsive": ' _ ( table_unresponsive ? 'false' : '{"details":{"type":"column","target":-1}}' ) _ ',
    "scrollX":false,_ROW_REORDER_PAGE_LENGTH_LENGTH_MENU
    "autoWidth":false,_SHOW_ALL_RECORDS
    "columns":[
      _COLUMNS
      _BUTTONS
      {"name":"Toggle child row","orderable":false,"className":"dtr-control data-table__header--invisible","targets":-1}
    ]
  }';

  table_config = table_config.replace('_AJAX', table_ajax ? "\n" _ '    "ajax":"' _ table_ajax _ '",' _ "\n" _ '    "serverSide":true,' _ "\n" _ '    "processing":true,' : '');
  table_config = table_config.replace('_STATE_SAVE', table_save_state ? "\n" _ '    "stateSave": true,' : '');
  table_config = table_config.replace('_SHOW_ALL_RECORDS', table_show_all_records ? "\n" _ '    "iDisplayLength":-1,' : '');
  table_config = table_config.replace('_ROW_REORDER', reorderConfig);
  table_config = table_config.replace('_PAGE_LENGTH', pageLengthConfig);
  table_config = table_config.replace('_LENGTH_MENU', lengthMenuConfig);
  table_config = table_config.replace('_COLUMNS', columnConfig);
  table_config = table_config.replace('_BUTTONS', buttonConfig);
%]
<table
  class="data-table table [% table_class %]"[% IF table_id %]
  id="[% table_id %]"[% END %][% IF table_ajax AND table_ajax_target %]
  data-href="[% table_ajax_target %]"[% END %]
  width="100%"
  data-config='[% table_config %]'
>
  <thead>
    [% INCLUDE tables/basic_row.tt row=header_row %]
  </thead>
  <tbody>
  [%
    FOREACH row IN rows;
      INCLUDE tables/basic_row.tt;
    END;
  %]
  </tbody>
</table>
