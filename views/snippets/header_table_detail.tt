[% PROCESS navigation/active_pages.tt; %]

<header class="table-header row no-gutters ">
  <div class="table-header-container">
    <div class="table-header-top row justify-content-between no-gutters">
      <h1 class="table-header__title">
        <span class="table-header__label">Table</span>
        <span class="table-header__name">[% layout_obj.name %]</span>
      </h1>
      <nav class="table-header__navigation">
        <div class="list list--horizontal">
          <ul class="list__items">
            <li class="list__item">
              <a href='[% url.page %]/[% layout_obj.identifier %]/data' class='link link--plain[% page_is_active(records_active_pages, "link--active"); %]'>
                <span>Records</span>
              </a>
            </li>
            
            <li class="list__item">
              <a href='[% url.page %]/[% layout_obj.identifier %]/' class='link link--plain[% page_is_active(table_dashboard_active_pages, "link--active"); %]'>
                <span>Dashboard</span>
              </a>
            </li>
            
            [% IF user.permission.superadmin %]
            <li class="list__item">
              <a href='[% url.page %]/table/[% layout_obj.instance_id %]/permissions' class='link link--plain[% page_is_active(table_permissions_active_pages, "link--active"); %]'>
                <span>Permissions</span>
              </a>
            </li>
            
            <li class="list__item">
              <a href='[% url.page %]/table/[% layout_obj.instance_id %]/edit' class='link link--plain[% page_is_active(edit_table_active_pages, "link--active"); %]'>
                <span>Edit table</span>
              </a>
            </li>
            [% END %]
            
            <li class="list__item">
              [% INCLUDE navigation/user_menu.tt %]
            </li>
          </ul>
        </div>
      
      </nav>
    </div>
    
    <nav class="table-header-bottom row justify-content-between no-gutters">
      <div class="table-header__options-left">
        <a href="[% header_back_url ? header_back_url : url.page _ '/table/' %]" class="btn btn-title-back">
          <span class="btn__title">Back</span>
        </a>
      </div>
  
      <div class="table-header__options-right">
        [%
          # records browse dropdown menus
          IF page.substr(0, 5) == "data_";
            view_groups = [];
          
            IF user_views.personal.size;
              view_items = [];
          
              FOREACH ve IN user_views.personal;
                veid = ve.id;
          
                view_items.push({
                  label  = ve.name,
                  target = url.page _ "/" _ layout_obj.identifier _ "/data?view=" _ ve.id,
                  alert  = alerts.$veid ? 1 : 0
                });
              END;
          
              view_groups.push({
                label = views_other_user ? "Views of " _ views_other_user.value : "Personal views",
                items = view_items
              });
            END;
          
            IF user_views.admin.size;
              view_items = [];
          
              FOREACH ve IN user_views.admin;
                veid = ve.id;
          
                view_items.push({
                  label  = ve.name,
                  target = url.page _ "/" _ layout_obj.identifier _ "/data?view=" _ ve.id,
                  alert  = alerts.$veid ? 1 : 0
                });
              END;
          
              view_groups.push({
                label = "Administration views",
                items = view_items
                items = view_items
              });
            END;
          
            IF user_views.shared.size;
              view_items = [];
    
              FOREACH ve IN user_views.shared;
                veid = ve.id;
          
                view_items.push({
                  label  = ve.name,
                  target = url.page _ "/" _ layout_obj.identifier _ "/data?view=" _ ve.id,
                  alert  = alerts.$veid ? 1 : 0
                });
              END;
          
              view_groups.push({
                label = "Shared views",
                items = view_items
              });
            END;
    
            INCLUDE snippets/dropdown.tt
              id             = "views"
              custom_classes = "dropdown--small"
              menu_right     = 1
              label          = "Current view: " _  (v ? v.name : "All data")
              filter         = "html"
              groups         = view_groups;
          
            manage_view_groups = [{ items = [] }];
    
            IF layout_obj.user_can("view_create");
              manage_view_groups.0.items.push({
                  class  = "link--add",
                  target = url.page _ "/" _ layout_obj.identifier _ "/view/0",
                  label  = "Add a view"
                });
            END;
    
            IF v;
              IF layout_obj.user_can("view_create");
                IF v.writable;
                  manage_view_groups.0.items.push({
                    class  = "",
                    target = url.page _ "/" _ layout_obj.identifier _ "/view/" _ v.id,
                    label  = "Edit current view"
                  });
                END;
          
                manage_view_groups.0.items.push({
                  class  = "",
                  target = url.page _ "/" _ layout_obj.identifier _ "/view/0?clone=" _ v.id,
                  label  = "Clone current view"
                });
              END;
          
              manage_view_groups.0.items.push({
                type   = "modal"
                class  = "",
                target = "alertMeModal",
                label  = "Alert me"
              });
            END;
          
            IF layout_obj.user_can("layout");
              manage_view_groups.0.items.push({
                type   = "modal"
                class  = "",
                target = "viewsOfAnotherUserModal",
                label  = "Manage views of another user"
              });
            END;
          
            manage_view_groups.0.items.push({
              type   = "modal"
              class  = "",
              target = "historicViewModal",
              label  = "Historic view"
            });
    
            INCLUDE snippets/dropdown.tt
              id             = "manage_views"
              custom_classes = "dropdown--small"
              menu_right     = 1
              label          = "Manage views"
              filter         = "html"
              groups         = manage_view_groups;
          
            IF views_limit_extra.size;
              view_limit_groups = [{ items = [] }];
    
              FOR view_limit IN views_limit_extra;
                view_limit_groups.0.items.push({
                  label  = view_limit.name,
                  target = url.page _ "/" _ layout_obj.identifier _ "/data?extra=" _ view_limit.id,
                  alert  = 0
                });
              END;
          
              INCLUDE snippets/dropdown.tt
                id             = "view_limits"
                custom_classes = "dropdown--small"
                menu_right     = 1
                label          = current_view_limit_extra.name
                filter         = "html"
                groups         = view_limit_groups;
            END;
        
            IF viewtype == "graph" AND layout_obj.user_can("layout");
              INCLUDE snippets/dropdown.tt
                id             = "manage_graphs"
                custom_classes = "dropdown--small"
                menu_right     = 1
                label          = "Manage graphs"
                filter         = "html"
                groups         = [{
                  items = [{
                    label  = "Manage graphs",
                    target = url.page _ "/" _ layout_obj.identifier _ "/graphs/"
                  }, {
                    label  = "Metrics",
                    target = url.page _ "/" _ layout_obj.identifier _ "/metrics/"
                  }]
                }];
            END;
          
            IF (layout_obj.user_can("link") AND show_link) OR layout_obj.user_can("layout") OR layout_obj.user_can("bulk_update") OR layout_obj.user_can("delete") OR layout_obj.user_can("download") OR layout_obj.user_can("bulk_delete");
              bulk_action_groups = [{ items = [] }];
              
              IF layout_obj.user_can("link") AND show_link;
                bulk_action_groups.0.items.push({
                  id     = "",
                  class  = "",
                  target = url.page _ "/" _ layout_obj.identifier _ "/link/",
                  label  = "Add a linked record"
                });
              END;
        
              IF layout_obj.user_can("layout");
                bulk_action_groups.0.items.push({
                  id     = "",
                  class  = "",
                  target = url.page _ "/" _ layout_obj.identifier _ "/import/",
                  label  = "Import records"
                });
              END;
        
              IF search;
                sel_type = "records in this search";
              ELSIF viewtype == "timeline";
                sel_type = "selected records";
              ELSE;
                sel_type = "records in this view";
              END;
          
              IF layout_obj.user_can("delete") AND layout_obj.user_can("bulk_delete");
                bulk_action_groups.0.items.push({
                  type   = "modal",
                  id     = "delete_href",
                  class  = "bulk_href",
                  target = "modal_delete",
                  label  = "Delete all " _ sel_type
                });
              END;
          
              IF layout_obj.user_can("bulk_update");
                bulk_action_groups.0.items.push({
                  id     = "update_href",
                  class  = "bulk_href",
                  target = url.page _ "/" _ layout_obj.identifier _ "/bulk/update/",
                  label  = "Update all " _ sel_type
                },{
                  id     = "clone_href",
                  class  = "bulk_href",
                  target = url.page _ "/" _ layout_obj.identifier _ "/bulk/clone/",
                  label  = "Clone all " _ sel_type
                });
              END;
          
              IF viewtype == "table" AND records.size AND layout_obj.user_can("download");
                bulk_action_groups.0.items.push({
                  id     = "",
                  class  = "",
                  target = url.page _ "/" _ layout_obj.identifier _ "/data?download" _ (filter_url ? "&" _ filter_url : "" ),
                  label  = "Download records"
                });
              END;
          
              IF bulk_action_groups.0.items.size;
                INCLUDE snippets/dropdown.tt
                  id             = "bulk_actions"
                  custom_classes = "dropdown--small"
                  menu_right     = 1
                  label          = "Actions"
                  filter         = "html"
                  groups         = bulk_action_groups;
              END;
            END;
          # records add/edit/clone menu items
          ELSIF page == 'edit' AND NOT record.new_entry;
            record_edit_buttons = [];

            UNLESS layout.no_hide_blank;
              record_edit_buttons.push({
                type        = "button",
                button_type = "button",
                target      = "",
                class       = "btn btn-link btn-plain btn-js-show-blank",
                label       = "Show blank values"
              });
            END;
        
            UNLESS layout.no_copy_record;
              record_edit_buttons.push({
                type          = "link",
                target        = url.page _ "/" _ layout.identifier _ "/record/?from=" _ record.current_id,
                class         = "link link--plain",
                label         = "Duplicate record",
                label_in_span = 1
              });
            END;
        
            UNLESS layout.no_download_pdf;
              record_edit_buttons.push({
                type          = "link",
                target        = url.page _ "/" _ layout.identifier _ "/record/" _ record.current_id _ "?pdf",
                class         = "link link--plain",
                label         = "Download as PDF",
                label_in_span = 1
              });
            END;
        
            IF layout.user_can("create_child") AND NOT record.parent_id AND layout.has_children;
              record_edit_buttons.push({
                type          = "link",
                target        = url.page _ "/" _ layout.identifier _ "/record/?child=" _ record.current_id,
                class         = "link link--plain",
                label         = "Create child record",
                label_in_span = 1
              });
            END;
  
            IF user.permission.link;
              record_edit_buttons.push({
                type          = "link",
                target        = url.page _ "/" _ layout.identifier _ "/link/" _ record.current_id,
                class         = "link link--plain",
                label         = "Link record",
                label_in_span = 1
              });
            END;
        
            IF record.user_can_delete;
              record_edit_buttons.push({
                type    = "modal_button"
                class   = "btn btn-delete"
                modalId = "deleteModal"
                label   = "Delete record"
              });
            END;
          
            INCLUDE snippets/button_list.tt
              list_class = "list--horizontal list--no-borders"
              buttons    = record_edit_buttons;
          END;
        %]
      </div>
    </nav>
  
  </div>
</header>
